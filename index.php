<?php 

function taskN($task) {
   echo "<hr/>Задача $task<hr/>";
}
/* 1. Если переменная $a пустая, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 1, 3, -3, 0, null, true, '', '0'. */

taskN(1);

$a = '';

function emptyA($a) {
   if (empty($a)) {
      echo "<p>A = '$a', true </p>";
   } else echo "<p>A = '$a', false </p>";
}

emptyA($a);

$arrA = [1, 3, -3, 0, null, true, '', '0'];

foreach ($arrA as $v) {
   emptyA($v);
}

taskN(2);

/* 2. Дано трехзначное число. Поменяйте среднюю цифру на ноль. */

function changeNull($num) {
   echo "<p>Число до замены: $num </p>";
   if (is_numeric($num)) {
      $num = $num . '';
      if (strlen($num) == 3) {
         $num[1] = 0;
         $num = +$num;
         echo "<p>Число после замены: $num </p>";
      } else echo "<p>Ошибка: число $num не трёхзначное</p>";
   } else echo "<p>Ошибка: $num - не число</p>";
}

changeNull(897);

taskN(3);

/* 3. Если переменная $a равна или меньше 1, а переменная $b больше или равна 3, то выведите сумму этих переменных, иначе выведите их разность (результат вычитания). Проверьте работу скрипта при $a и $b, равном 1 и 3, 0 и 6, 3 и 5. */

function operAandB($a, $b) {
   echo "<p>Дано: А = $a, Б = $b</p>";
   if (is_numeric($a) && is_numeric($b)) {
      if ($a <= 1 && $b >= 3) {
         echo '<p>А + Б = ' . ($a + $b) . '</p>';
      } else echo '<p>А - Б = ' . ($a - $b) . '</p>';
   } else echo '<p>Ошибка: введите числа.</p>';

}

operAandB(1, 3);
operAandB(0, 6);
operAandB(3, 5);

taskN(4);

/* 4. Дана строка с символами, например, 'abcde'. Проверьте, что первым символом этой строки является буква 'a'. Если это так - выведите 'да', в противном случае выведите 'нет'. */

function isFirstA($str) {
   if (ctype_alpha($str)) {
      echo ($str[0] == 'a') ? 'Да' : 'Нет';
   } else echo 'Введите латинские символы.';
}

isFirstA('abcde');

taskN(5);

/* 5. Дана строка из 6-ти цифр. Проверьте, что сумма первых трех цифр равняется сумме вторых трех цифр. Если это так - выведите 'да', в противном случае выведите 'нет'. */

function checkSums($str) {
   if (strlen($str) == 6 && is_numeric($str)) {
      $sum123 = +$str[0] + +$str[1] + +$str[2];
      $sum456 = +$str[3] + +$str[4] + +$str[5];
      if ($sum123 == $sum456) echo 'Да';
      else echo 'Нет';
   } else echo 'Введите корректные данные';
}

checkSums('123321');

taskN(6);

/* 6. Разработайте программу, которая определяла количество прошедших часов по введенным пользователем градусах. Введенное число может быть от 0 до 360. */

function degToHour($deg) {
   if($deg >= 0 && $deg <=360) {
      $hour = (24 * $deg) / 360;
      $hour = round($hour, 2);
      $min = round(($hour - floor($hour)) * 60);
      $hour = floor($hour);
      echo "В $deg град.: $hour ч. $min мин.";
   } else echo 'Введите корректные данные';
} 

degToHour(90);

taskN(7);

/* 7. Разработайте программу, которая из чисел 20 .. 45 находила те, которые делятся на 5 и найдите сумму этих чисел */

$arr7 = [];
for ($i = 20; $i <= 45; $i++) {
   $arr7[] = $i;
}

function getSumDiv5($arr) {
   $sum = 0;
   for ($i = 0; $i < count($arr); $i++) {
      if (!($arr[$i] % 5)) {
         $sum += $arr[$i];
      }
   }
   echo "Сумма: $sum";
}

getSumDiv5($arr7);

taskN(8);

/* 8. Дано пятизначное число. Цифры на четных позициях «занулить». Например, из 12345 получается число 10305. */

function getEvenNull($num) {
   echo "Дано: $num <br/>";
   $num = $num . '';
   for($i = 0; $i < strlen($num); $i++) {
      if(!($i % 2)) continue;
      else $num[$i] = '0'; 
   }
   $num = $num - 0;
   echo "Итог: $num";
}

getEvenNull(4893279);

taskN(9);

/* 9. Дано число $num=1000. Делите его на 2 столько раз, пока результат деления не станет меньше 50. Какое число получится? Посчитайте количество итераций, необходимых для этого (итерация - это проход цикла). Решите задачу сначала через цикл while, а потом через цикл for. */

$num = 1000;
echo "Дано: $num <br/>";
$i = 0;
while($num >= 50) {
   $num /= 2;
   $i++;
}

echo "Итоговое число: $num <br/>";
echo "Количество итераций: $i";

taskN(10);

/* 10. Вывести на экран фигуру из звездочек:
*******
*******
*******
*******
(квадрат из n строк, в каждой строке n звездочек) */

function printStarSquare($n) {
   for($i = 0; $i < $n; $i++) {
      $strStars = '';
      for ($j = 0; $j < $n; $j++) {
         $strStars .= ' *';
      }
      echo "$strStars<br/>";
   }
}

printStarSquare(10);